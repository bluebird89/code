apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.8
          ports:
            - containerPort: 8081
          volumeMounts:
            - mountPath: "/usr/share/nginx/html"
              name: nginx-vol
      volumes:
        - name: nginx-vol
          emptyDir: {}
# kubectl create -f nginx-deployment.yaml --record
# kubectl apply -f nginx-deployment.yaml
# kubectl get deployments
# kubectl get pods -l app=nginx
# kubectl delete -f nginx-deployment.yaml
# kubectl scale deployment nginx-deployment --replicas=4
# kubectl create -f nginx-deployment.yaml --record
# kubectl rollout status deployment/nginx-deployment
# kubectl edit deployment/nginx-deployment
# kubectl rollout status deployment/nginx-deployment
#  kubectl set image deployment/nginx-deployment nginx=nginx:1.91
# kubectl rollout history deployment/nginx-deployment --revision=2

# kubectl rollout undo deployment/nginx-deployment
# kubectl rollout undo deployment/nginx-deployment --to-revision=2

# kubectl rollout pause deployment/nginx-deployment
# kubectl rollout resume deploy/nginx-deployment
